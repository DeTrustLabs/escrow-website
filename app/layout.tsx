import type { Metadata } from "next"
import { Geist, Geist_Mono } from "next/font/google"
import "./globals.css"
import { LANGUAGES } from "@/i18n/request"
import { headers } from "next/headers"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
})

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  // Infer locale from pathname in request headers (App Router server component)
  let lang = "en"
  try {
    const hdrs = await headers()
    const url = hdrs.get("x-invoke-path") || hdrs.get("referer") || ""
    // Fallback: use request URL if available via NEXT_URL
    const path = (hdrs.get("next-url") || "").toString() || url
    const segments = path.split("/").filter(Boolean)
    if (segments.length > 0 && LANGUAGES.includes(segments[0])) {
      lang = segments[0]
    }
  } catch {
    // ignore
  }
  return (
    <html lang={lang} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  )
}
